package com.spring.study;

import java.text.DateFormat;
import java.util.Date;
import java.util.List;
import java.util.Locale;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.apache.ibatis.session.SqlSession;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.spring.study.dao.IDao;
import com.spring.study.dto.ContentDto;

@Controller
public class HomeController2 {
	
	
	private static final Logger logger = LoggerFactory.getLogger(HomeController2.class);
	
	
	@Autowired
	private SqlSession sqlSession;
	// 에러 발생	
	// IDao dao = sqlSession.getMapper(IDao.class);
	
	private HttpSession session;
	static int NO = 0;
	
	static String SCUR_PAGE = null;
	static Integer LIST_COUNT = 5;
	static Integer PAGE_COUNT = 10;
	static Integer I_CUR_PAGE = 1;
	static Integer I_TOTAL_COUNT = null;
	static int TOTAL_PAGE = 0;
	static int N_START = 0;
	static int N_END = 0;
	static int N_START_PAGE = 0;
	static int N_END_PAGE = 0;
	
	
	 
	@RequestMapping("view_List")
	public String view_List(HttpServletRequest request, Model model) {
		IDao dao = sqlSession.getMapper(IDao.class);    	


		// total count 가져오기
		I_TOTAL_COUNT = dao.totalCountDao();
		
		if(I_TOTAL_COUNT == null || I_TOTAL_COUNT == 0) {
			TOTAL_PAGE = 0;
		}else {
		    TOTAL_PAGE = I_TOTAL_COUNT / LIST_COUNT;
		    if(I_TOTAL_COUNT % LIST_COUNT > 0) {
		    	TOTAL_PAGE++;
		    }
		}
		
		// CUR_PAGE 받아오기
		String sCur_Page = request.getParameter("curPage");	
		if(sCur_Page == null || sCur_Page.isEmpty()) {			
			sCur_Page = SCUR_PAGE;
		}
		
		if(sCur_Page == null || sCur_Page.isEmpty() && SCUR_PAGE == null || SCUR_PAGE.isEmpty()) {			
			I_CUR_PAGE = 1;
		}else {
			I_CUR_PAGE = Integer.parseInt(sCur_Page);	
			if(I_CUR_PAGE > TOTAL_PAGE) {
				I_CUR_PAGE = TOTAL_PAGE;
			}else if(I_CUR_PAGE < 1) {
				I_CUR_PAGE = 1;
			}
		}
		
		// page 표시에 표시될 content 수량 listGoodsDao2 에 사용
		N_START = (I_CUR_PAGE - 1) * LIST_COUNT + 1;
		N_END = (I_CUR_PAGE - 1) * LIST_COUNT + LIST_COUNT;
		
		
		// 하단에 표시될 page 수량
		// 시작 페이지
		N_START_PAGE = ((I_CUR_PAGE - 1) / PAGE_COUNT) * PAGE_COUNT + 1;
		// 끝 페이지
		N_END_PAGE = N_START_PAGE + PAGE_COUNT - 1;	
		if(N_END_PAGE > TOTAL_PAGE) {
			N_END_PAGE = TOTAL_PAGE;
		}
		
		
		
		model.addAttribute("mListCount", LIST_COUNT);
		model.addAttribute("mPageCount", PAGE_COUNT);
		model.addAttribute("mTotalCount", I_TOTAL_COUNT);
		model.addAttribute("mTotalPage", TOTAL_PAGE);
		model.addAttribute("mCurPage", I_CUR_PAGE);		
		model.addAttribute("mStart", N_START);
		model.addAttribute("mEnd", N_END);
		model.addAttribute("mStartPage", N_START_PAGE);
		model.addAttribute("mEndPage", N_END_PAGE);
		
		
		System.out.println("LIST_COUNT  : " + LIST_COUNT );
		System.out.println("PAGE_COUNT : " + PAGE_COUNT);
		System.out.println("I_TOTAL_COUNT : " + I_TOTAL_COUNT);
		System.out.println("TOTAL_PAGE : " + TOTAL_PAGE);
		System.out.println("sCur_Page : " + sCur_Page);
		System.out.println("I_CUR_PAGE : " + I_CUR_PAGE);
		System.out.println("N_START  : " + N_START );
		System.out.println("N_END : " + N_END);
		System.out.println("N_START_PAGE   : " + N_START_PAGE  );
		System.out.println("N_END_PAGE : " + N_END_PAGE);

		return "view_List";
	}
	
}
