<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="
   http://www.springframework.org/schema/beans     
   http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
   http://www.springframework.org/schema/context 
   http://www.springframework.org/schema/context/spring-context-4.0.xsd
   http://www.springframework.org/schema/mvc
   http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
   http://www.springframework.org/schema/websocket
   http://www.springframework.org/schema/websocket/spring-websocket.xsd">

	<mvc:annotation-driven />

	<context:component-scan base-package="com.test.web" />
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up 
			static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />
	<mvc:resources mapping="/js/**" location="/js/" />
	<mvc:resources mapping="/css/**" location="/css/" />
	<mvc:resources mapping="/images/**" location="/images/" />


	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/view/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- DB접속정보 -->
	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName"
			value="org.mariadb.jdbc.Driver" />
		<property name="url"
			value="jdbc:mysql://server.aniss.co.kr:3306/leegmtestdb?interactiveClient=true&amp;autoReconnect=true&amp;autoReconnectForPools=true" />
		<property name="username" value="leegmtestdb" />
		<property name="password" value="leegmtestdb!@34" />
	</bean>





	<!-- MyBatis 정보 -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation"
			value="/WEB-INF/mybatis-config.xml" />
		<property name="typeAliasesPackage" value="com.test.web" />
		<property name="mapperLocations"
			value="classpath*:com/test/web/**/dao/mapper/*Mapper.xml" />
	</bean>
	
	
	
	
	

	<bean id="sqlSessionTemplate"
		class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory" />
	</bean>





	<!-- dao 스캔 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.test.web.**.dao" />
	</bean>



	<!-- WebSocket 설정 -->
<!-- 	<beans:bean id="echoHandler" class="com.test.web.websocket.handler.EchoHandler" /> -->

<!-- 	<websocket:handlers> -->
<!-- 		<websocket:mapping handler="echoHandler" path="/echo-ws.do" /> -->
<!-- 		<websocket:handshake-interceptors> -->
<!-- 			<bean class="com.test.web.websocket.handler.HandshakeInterceptor" /> -->
<!-- 		</websocket:handshake-interceptors> -->
<!-- 		<websocket:sockjs /> -->
<!-- 	</websocket:handlers> -->


<!-- 	<websocket:message-broker application-destination-prefix="/app"> -->
<!--         <websocket:stomp-endpoint path="/hello"> -->
<!--             <websocket:sockjs /> -->
<!--         </websocket:stomp-endpoint> -->
<!--         <websocket:simple-broker prefix="/topic" /> -->
<!--     </websocket:message-broker> -->

	<!-- 
	<websocket:message-broker application-destination-prefix="/app"
							  user-destination-prefix="/personal"
							  path-matcher="pathMatcher"
							  path-helper="urlPathHelper">

		message-size=128*1024, send-buffer-size=1024*1024
		<websocket:transport message-size="131072" send-timeout="25000" send-buffer-size="1048576">
			<websocket:decorator-factories>
				<bean class="org.springframework.web.socket.config.TestWebSocketHandlerDecoratorFactory" />
			</websocket:decorator-factories>
		</websocket:transport>

		<websocket:stomp-endpoint path=" /foo,/bar" allowed-origins="https://mydomain1.example,https://mydomain2.example">
			<websocket:handshake-handler ref="myHandler"/>
			<websocket:handshake-interceptors>
				<bean class="org.springframework.web.socket.config.FooTestInterceptor"/>
				<ref bean="barTestInterceptor"/>
			</websocket:handshake-interceptors>
		</websocket:stomp-endpoint>

		<websocket:stomp-endpoint path="/test,/sockjs" allowed-origins="https://mydomain3.com,https://mydomain4.com">
			<websocket:handshake-handler ref="myHandler"/>
			<websocket:handshake-interceptors>
				<bean class="org.springframework.web.socket.config.FooTestInterceptor"/>
				<ref bean="barTestInterceptor"/>
			</websocket:handshake-interceptors>
			<websocket:sockjs/>
		</websocket:stomp-endpoint>

		<websocket:stomp-error-handler ref="errorHandler" />

		<websocket:simple-broker prefix="/topic, /queue" heartbeat="15000,15000" scheduler="scheduler" />

	</websocket:message-broker>
 -->


</beans>
